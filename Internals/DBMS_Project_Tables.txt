CREATE DATABASE smartcity;
USE smartcity;

-- Create VEHICLE table
CREATE TABLE VEHICLE (
    VEHICLE_ID INT PRIMARY KEY,
    CURRENT_LOCATION VARCHAR(100),
    STATUS VARCHAR(50),
    LAST_UPDATE DATETIME
);

-- Create HUMAN table
CREATE TABLE HUMAN (
    ID_NO INT PRIMARY KEY,
    FNAME VARCHAR(50),
    LNAME VARCHAR(50),
    DOB DATE,
    AGE INT,
    V_ID INT,
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID)
);

-- Create ROUTE table
CREATE TABLE ROUTE (
    R_ID INT PRIMARY KEY,
    JOURNEY_TIME TIME,
    START_POINT VARCHAR(100),
    END_POINT VARCHAR(100),
    DISTANCE DECIMAL(10, 2)
);

-- Create ROUTE_FOLLOWED junction table
CREATE TABLE ROUTE_FOLLOWED (
    VEHICLE_ID INT,
    RT_ID INT,
    PRIMARY KEY (VEHICLE_ID, RT_ID),
    FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID),
    FOREIGN KEY (RT_ID) REFERENCES ROUTE(R_ID)
);

-- Create SCHEDULE table
CREATE TABLE SCHEDULE (
    SCHEDULE_ID INT PRIMARY KEY,
    R_ID INT,
    V_ID INT,
    DEPARTURE_TIME TIME,
    ARRIVAL_TIME TIME,
    FOREIGN KEY (R_ID) REFERENCES ROUTE(R_ID),
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID)
);

CREATE TABLE SCHEDULE_FOLLOWED (
    R_ID INT,
    S_ID INT,
    PRIMARY KEY (R_ID, S_ID),
    FOREIGN KEY (R_ID) REFERENCES ROUTE(R_ID),
    FOREIGN KEY (S_ID) REFERENCES SCHEDULE(SCHEDULE_ID)
);

CREATE TABLE OPERATES_ON (
    V_ID INT,
    S_ID INT,
    PRIMARY KEY (V_ID, S_ID),
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID),
    FOREIGN KEY (S_ID) REFERENCES SCHEDULE(SCHEDULE_ID)
);

-- Create INCIDENT table
CREATE TABLE INCIDENT (
    INCIDENT_ID INT PRIMARY KEY,
    V_ID INT,
    DESCRIPTION TEXT,
    REPORT_TIME_DATE DATETIME,
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID)
);

CREATE TABLE ACCIDENT_HISTORY (
    V_ID INT,
    I_ID INT,
    PRIMARY KEY (V_ID, I_ID),
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID),
    FOREIGN KEY (I_ID) REFERENCES INCIDENT(INCIDENT_ID)
);

-- Create MAINTENANCE table
CREATE TABLE MAINTENANCE (
    MAINTENANCE_ID INT PRIMARY KEY,
    V_ID INT,
    ISSUE_REPORTED TEXT,
    REPAIR_STATUS VARCHAR(50),
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID)
);

-- Create PERFORMS_MAINTENANCE junction table
CREATE TABLE PERFORMS_MAINTENANCE (
    M_ID INT,
    STAFF_ID INT,
    PRIMARY KEY (M_ID, STAFF_ID),
    FOREIGN KEY (M_ID) REFERENCES MAINTENANCE(MAINTENANCE_ID),
    FOREIGN KEY (STAFF_ID) REFERENCES HUMAN(ID_NO)
);

-- Create MAINTENANCE_HISTORY table
CREATE TABLE MAINTENANCE_HISTORY (
    M_ID INT,
    V_ID INT,
    PRIMARY KEY (M_ID, V_ID),
    FOREIGN KEY (M_ID) REFERENCES MAINTENANCE(MAINTENANCE_ID),
    FOREIGN KEY (V_ID) REFERENCES VEHICLE(VEHICLE_ID)
);

-- Create PAYMENT table
CREATE TABLE PAYMENT (
    PAYMENT_ID INT PRIMARY KEY,
    PASSENGER_ID INT,
    AMOUNT DECIMAL(10, 2),
    METHOD VARCHAR(50),
    FOREIGN KEY (PASSENGER_ID) REFERENCES HUMAN(ID_NO)
);